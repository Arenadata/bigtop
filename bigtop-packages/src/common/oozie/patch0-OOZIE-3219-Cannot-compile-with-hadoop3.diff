 .../java/org/apache/oozie/util/db/FailingConnectionWrapper.java     | 4 ++--
 examples/pom.xml                                                    | 6 ++++++
 sharelib/pig/pom.xml                                                | 5 +++++
 .../java/org/apache/oozie/action/hadoop/SparkArgsExtractor.java     | 4 ++--
 tools/src/main/java/org/apache/oozie/tools/OozieDBImportCLI.java    | 4 ++--
 webapp/pom.xml                                                      | 6 ++++++
 7 files changed, 24 insertions(+), 6 deletions(-)

diff --git a/core/src/main/java/org/apache/oozie/util/db/FailingConnectionWrapper.java b/core/src/main/java/org/apache/oozie/util/db/FailingConnectionWrapper.java
index 3b87cc9e..9e603ed0 100644
--- a/core/src/main/java/org/apache/oozie/util/db/FailingConnectionWrapper.java
+++ b/core/src/main/java/org/apache/oozie/util/db/FailingConnectionWrapper.java
@@ -20,8 +20,8 @@ package org.apache.oozie.util.db;
 
 import com.google.common.base.Preconditions;
 import com.google.common.base.Predicate;
+import com.google.common.base.Strings;
 import com.google.common.collect.Sets;
-import org.apache.directory.api.util.Strings;
 import org.apache.oozie.util.XLog;
 
 import javax.annotation.Nullable;
@@ -354,7 +354,7 @@ public class FailingConnectionWrapper implements Connection {
 
         @Override
         public boolean apply(@Nullable String input) {
-            Preconditions.checkArgument(Strings.isNotEmpty(input));
+            Preconditions.checkArgument(!Strings.isNullOrEmpty(input));
 
             boolean isDmlStatement = false;
             for (final String dmlPrefix : DML_PREFIXES) {
diff --git a/examples/pom.xml b/examples/pom.xml
index 2bfc7c8b..c13febc8 100644
--- a/examples/pom.xml
+++ b/examples/pom.xml
@@ -38,6 +38,12 @@
             <scope>provided</scope>
         </dependency>
 
+        <dependency>
+            <groupId>org.apache.hadoop</groupId>
+            <artifactId>hadoop-common</artifactId>
+            <scope>provided</scope>
+        </dependency>
+
         <dependency>
             <groupId>org.apache.hadoop</groupId>
             <artifactId>hadoop-minicluster</artifactId>
diff --git a/sharelib/pig/pom.xml b/sharelib/pig/pom.xml
index 5084b61a..6619a0a8 100644
--- a/sharelib/pig/pom.xml
+++ b/sharelib/pig/pom.xml
@@ -107,6 +107,11 @@
             <artifactId>hadoop-client</artifactId>
             <scope>provided</scope>
         </dependency>
+        <dependency>
+            <groupId>org.apache.hadoop</groupId>
+            <artifactId>hadoop-common</artifactId>
+            <scope>provided</scope>
+        </dependency>
         <dependency>
            <groupId>dk.brics.automaton</groupId>
             <artifactId>automaton</artifactId>
diff --git a/sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkArgsExtractor.java b/sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkArgsExtractor.java
index 2f3cfbe4..5af39cda 100644
--- a/sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkArgsExtractor.java
+++ b/sharelib/spark/src/main/java/org/apache/oozie/action/hadoop/SparkArgsExtractor.java
@@ -19,9 +19,9 @@
 package org.apache.oozie.action.hadoop;
 
 import com.google.common.annotations.VisibleForTesting;
+import com.google.common.base.Strings;
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
 import org.apache.commons.lang.StringUtils;
-import org.apache.directory.api.util.Strings;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.filecache.DistributedCache;
 import org.apache.hadoop.fs.Path;
@@ -424,7 +424,7 @@ class SparkArgsExtractor {
     private void addUserDefined(final String userList, final Map<String, URI> urisMap) {
         if (userList != null) {
             for (final String file : userList.split(OPT_VALUE_SEPARATOR)) {
-                if (!Strings.isEmpty(file)) {
+                if (!Strings.isNullOrEmpty(file)) {
                     final Path p = new Path(file);
                     urisMap.put(p.getName(), p.toUri());
                 }
diff --git a/tools/src/main/java/org/apache/oozie/tools/OozieDBImportCLI.java b/tools/src/main/java/org/apache/oozie/tools/OozieDBImportCLI.java
index 85294090..f21fd3bd 100644
--- a/tools/src/main/java/org/apache/oozie/tools/OozieDBImportCLI.java
+++ b/tools/src/main/java/org/apache/oozie/tools/OozieDBImportCLI.java
@@ -19,6 +19,7 @@
 package org.apache.oozie.tools;
 
 import com.google.common.base.Charsets;
+import com.google.common.base.Strings;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
 import com.google.gson.Gson;
@@ -26,7 +27,6 @@ import com.google.gson.Gson;
 import com.google.gson.JsonSyntaxException;
 import org.apache.commons.cli.Options;
 import org.apache.commons.cli.ParseException;
-import org.apache.directory.api.util.Strings;
 import org.apache.oozie.BundleActionBean;
 import org.apache.oozie.BundleJobBean;
 import org.apache.oozie.CoordinatorActionBean;
@@ -166,7 +166,7 @@ public class OozieDBImportCLI {
     }
 
     private static void setImportBatchSize() {
-        if (Strings.isNotEmpty(System.getProperty(OOZIE_DB_IMPORT_BATCH_SIZE_KEY))) {
+        if (!Strings.isNullOrEmpty(System.getProperty(OOZIE_DB_IMPORT_BATCH_SIZE_KEY))) {
             try {
                 IMPORT_BATCH_SIZE = Integer.parseInt(System.getProperty(OOZIE_DB_IMPORT_BATCH_SIZE_KEY));
             }
diff --git a/webapp/pom.xml b/webapp/pom.xml
index 79799691..67526d95 100644
--- a/webapp/pom.xml
+++ b/webapp/pom.xml
@@ -148,6 +148,12 @@
             <artifactId>hadoop-client</artifactId>
             <scope>provided</scope>
         </dependency>
+
+        <dependency>
+            <groupId>org.apache.hadoop</groupId>
+            <artifactId>hadoop-common</artifactId>
+            <scope>provided</scope>
+        </dependency>
     </dependencies>
 
     <build>
